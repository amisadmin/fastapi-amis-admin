[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "fastapi_amis_admin"
authors = [
    { name = "Atomi", email = "1456417373@qq.com" },
]
maintainers = [
    { name = "Atomi", email = "1456417373@qq.com" },
]
description = "FastAPI-Amis-Admin is a high-performance, efficient and easily extensible FastAPI admin framework. Inspired by Django-admin, and has as many powerful functions as Django-admin. "
readme = "README.md"
requires-python = ">=3.7"
dynamic = ["version"]
keywords = [
    "fastapi",
    "fastapi-admin",
    "fastapi-amis-admin",
    "django-admin",
    "sqlmodel",
    "sqlalchemy",
]
classifiers = [
    "Framework :: FastAPI",
    "Environment :: Web Environment",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "fastapi>=0.68.0",
    "sqlmodel>=0.0.7",
    "python-multipart>=0.0.5",
    "sqlalchemy-database>=0.0.5,<0.1.0",
    "aiofiles",
]


[project.urls]
Documentation = "http://docs.amis.work/"
Source = "https://github.com/amisadmin/fastapi_amis_admin"
FastAPI-User-Auth = "https://github.com/amisadmin/fastapi_user_auth"

[project.optional-dependencies]
standard = [
    "uvicorn[standard] >=0.12.0,<0.16.0",
    "fastapi-amis-admin-cli>=0.1.0,<0.2.0",
]
test = [
    "pytest >=6.2.4,<7.0.0",
    "aiosqlite",
    "pytest-asyncio>=0.17",
    "httpx",
]
dev = [
    "jinja2 >=2.11.2,<4.0.0",
    "aiosqlite",
    "uvicorn[standard] >=0.12.0,<0.16.0",
    "fastapi-amis-admin-cli>=0.1.0,<0.2.0",
    "pre-commit>=2.20.0",
]
cli = [
    "fastapi-amis-admin-cli>=0.1.0,<0.2.0",
]
all = [
    "jinja2 >=2.11.2,<4.0.0",
    "uvicorn[standard] >=0.12.0,<0.16.0",
    "ujson>=4.0.1",
    "fastapi-amis-admin-cli>=0.1.0,<0.2.0",
]

# pytest
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
# pytest-asyncio
asyncio_mode = "auto"

[tool.isort]
profile = "black"
atomic = true
filter_files = true

[tool.black]
line-length = 130
include = '\.pyi?$'
